// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// query_bam_index
DataFrame query_bam_index(CharacterVector bam_file_name, CharacterVector bam_index_path, CharacterVector key_type, CharacterVector key_value);
RcppExport SEXP _bambi_query_bam_index(SEXP bam_file_nameSEXP, SEXP bam_index_pathSEXP, SEXP key_typeSEXP, SEXP key_valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type bam_file_name(bam_file_nameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type bam_index_path(bam_index_pathSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type key_type(key_typeSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type key_value(key_valueSEXP);
    rcpp_result_gen = Rcpp::wrap(query_bam_index(bam_file_name, bam_index_path, key_type, key_value));
    return rcpp_result_gen;
END_RCPP
}

RcppExport void print_cb_rows(void *, void *, void *);
RcppExport void print_qname_rows(void *, void *, void *);
RcppExport void print_tag_rows(void *, void *, void *, void *);
RcppExport void print_ub_rows(void *, void *, void *);

static const R_CallMethodDef CallEntries[] = {
    {"_bambi_query_bam_index", (DL_FUNC) &_bambi_query_bam_index, 4},
    {"print_cb_rows",    (DL_FUNC) &print_cb_rows,    3},
    {"print_qname_rows", (DL_FUNC) &print_qname_rows, 3},
    {"print_tag_rows",   (DL_FUNC) &print_tag_rows,   4},
    {"print_ub_rows",    (DL_FUNC) &print_ub_rows,    3},
    {NULL, NULL, 0}
};

RcppExport void R_init_bambi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
